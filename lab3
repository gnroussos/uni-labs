#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#define TRUE 1
#define FALSE 0

void main(int argc, char **argv) 
{
	FILE *src;
	char c = '\n';
	char lastc = '\n';

	int flags_set = FALSE;

	// Per file variables
	long int number_of_lines = 0;
	int count_lines = TRUE;

	long int number_of_words = 0;
	int count_words = TRUE;

	long int number_of_chars = 0;
	int count_chars = TRUE;

	long int max_line_length = 0L;
	int count_max_lines = FALSE;
	int number_of_chars_in_line = 0;

	// Global counts
	int number_of_input_files = 0;
	long int total_lines = 0;
	long int total_words = 0;
	long int total_chars = 0;
	long int global_max_lines = 0;

	int i; // Used for simple counting

	char *filename;

	 // Process the input arguments
	// Check flags
	for (i = 1; i < argc; i++){
		if (argv[i][0] == '-') {
			flags_set = TRUE;
			break;
		}
	}

	// Process the flags
	if (flags_set) {
		// Reset the flags to FALSE
		count_lines = FALSE;
		count_words = FALSE;
		count_chars = FALSE;

		// If it's a flag
		for (i = 1; i < argc; i++){
			if (argv[i][0] == '-') {
				if (argv[i][1] == 'l' && argv[i][2] == '\0') count_lines = TRUE;
				else if (argv[i][1] == 'w' && argv[i][2] == '\0') count_words = TRUE;
				else if (argv[i][1] == 'c' && argv[i][2] == '\0') count_chars = TRUE;
				else if (argv[i][1] == 'L' && argv[i][2] == '\0') count_max_lines = TRUE;
				else {
					printf ("Illegal option: %s\n", argv[i]);
					exit(-1);
				}
			}
		}
	}



	//Process the files
	for (i = 1; i < argc; i++){
		number_of_lines = 0;
		number_of_words = 0;
		number_of_chars = 0;
		max_line_length = 0;
		c = 0;

		if (argv[i][0] == '-') {
			continue;
		}

		filename = argv[i];

		//Try to open the source file
		if ((src = fopen(filename, "r")) == NULL) {
			printf("Input file does not exist: %s\n", filename);
			continue;
			//exit(0);
		}

		number_of_input_files++;

		while (c != EOF) {
			lastc = c;
			c = fgetc(src);

			if (c == '\n') {
				number_of_lines++; // increment lines

				// if check to see if it is greater than the max lines
				// if so set max_line_length and reset number_of_chars_in_line to 0
				if (number_of_chars_in_line > max_line_length) max_line_length = number_of_chars_in_line;
				number_of_chars_in_line = 0;
			}
			else {
				number_of_chars_in_line++;
			}
			if (isspace(c) && !isspace(lastc)) number_of_words++; // increment words
			number_of_chars++; // increment chars

		}


		if (lastc != '\n') number_of_lines++; // If the last character is not a newline, increment the number of lines
		if (!isspace(lastc)) number_of_words++; // If the last character is not a space, increment the number of words

		number_of_chars--; // EOF not  a char


		//Print out the results
		if (count_lines) printf ("%9ld", number_of_lines);
		if (count_words) printf ("%9ld", number_of_words);
		if (count_chars) printf ("%9ld", number_of_chars);
		if (count_max_lines) printf ("%9ld", max_line_length);
		printf (" %s\n", filename);

		fclose(src);

		total_lines += number_of_lines;
		total_words += number_of_words;
		total_chars += number_of_chars;
		if (total_lines > global_max_lines) global_max_lines = total_lines;
	}


	 //Print out the totals
	if (number_of_input_files == 0) {
		printf ("No filename specified...aborting!\n");
		exit(-1);
	}

	if (number_of_input_files > 1){
		if (count_lines) printf ("%9ld", total_lines);
		if (count_words) printf ("%9ld", total_words);
		if (count_chars) printf ("%9ld", total_chars);
		if (count_max_lines) printf ("%9ld", max_line_length);
		printf (" Total\n");

	}

}
